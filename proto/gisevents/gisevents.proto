// vim: wrap tw=80
syntax = "proto3";
package gisevents;

import "google/protobuf/timestamp.proto";

message CreationEvent {
    int64 id = 1; // required
    google.protobuf.Timestamp timestamp = 2; // required
    int32 version = 3; // required
    oneof geometry {
      Point point = 4;
      LineString linestring = 5;
      Polygon polygon = 6;
    }
    Properties properties = 7;
  }

message Properties {
    repeated string key = 1;
    repeated string value = 2;
  }


message ModificationEvent {
    int64 id = 1; // required
    google.protobuf.Timestamp timestamp = 2; // required
    int32 version = 3; // required
    // If one of these fields are not set, it will result in the language
    // specific null value.
    oneof patch {
        Point point_patch = 4;
        LineStringPatch linestring_patch = 5;
        LineStringPatch polygon_patch = 6;
      }
    PropPatch prop_patch = 7;
  }

message DeletionEvent {
    int64 id = 1; // required
    google.protobuf.Timestamp timestamp = 2; // required
    int32 version = 3; // required
  }

message Point {
    // lat and lon in units of 100 nanodegrees 
    sint32 lon = 2; // required
    sint32 lat = 1; // required
}

message LineString {
    // parallell arrays of lat and lon values in nanodegrees
    repeated sint32 lat = 1; // Delta-encoded
    repeated sint32 lon = 2; // Delta-encoded
}

message Polygon {
    // parallell arrays of lat and lon values in nanodegrees
    repeated sint32 lat = 1; // Delta-encoded
    repeated sint32 lon = 2; // Delta-encoded

}

// A geometry patch
message LineStringPatch {
  enum Command {
      INSERT = 0;
      DELETE = 1;
      CHANGE = 2;
    }
  repeated int32 index = 1; // Delta-encoded
  repeated Command command = 2;
  repeated Point vector = 3; // (0,0) for DELETE commands.
}

message PropPatch {
  PropDelete prop_delete = 1;
  PropInsert prop_insert = 2;
  PropUpdate prop_update = 3;
}

message PropDelete {
  repeated string key = 1;
}

message PropInsert {
  // parallell arrays
  repeated string key = 1;
  repeated string value = 2;
}

message PropUpdate {
    // parallell arrays
    repeated string key= 1;
    repeated string value = 2;
  }
